// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "11/07/2016 17:35:27"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module sum1 (
	OVF,
	A,
	S);
output 	OVF;
input 	[4:0] A;
output 	[4:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \OVF~output_o ;
wire \S[4]~output_o ;
wire \S[3]~output_o ;
wire \S[2]~output_o ;
wire \S[1]~output_o ;
wire \S[0]~output_o ;
wire \A[4]~input_o ;
wire \A[3]~input_o ;
wire \A[2]~input_o ;
wire \A[1]~input_o ;
wire \A[0]~input_o ;
wire \inst13~0_combout ;
wire \inst9|inst6~combout ;
wire \inst7|inst6~combout ;
wire \inst6|inst6~combout ;
wire \inst5|inst6~combout ;


cyclonev_io_obuf \OVF~output (
	.i(\inst13~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OVF~output_o ),
	.obar());
// synopsys translate_off
defparam \OVF~output .bus_hold = "false";
defparam \OVF~output .open_drain_output = "false";
defparam \OVF~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[4]~output (
	.i(\inst9|inst6~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[4]~output .bus_hold = "false";
defparam \S[4]~output .open_drain_output = "false";
defparam \S[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[3]~output (
	.i(\inst7|inst6~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
defparam \S[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[2]~output (
	.i(\inst6|inst6~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
defparam \S[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[1]~output (
	.i(\inst5|inst6~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
defparam \S[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[0]~output (
	.i(!\A[0]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
defparam \S[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \A[4]~input (
	.i(A[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[4]~input_o ));
// synopsys translate_off
defparam \A[4]~input .bus_hold = "false";
defparam \A[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst13~0 (
// Equation(s):
// \inst13~0_combout  = ( \A[0]~input_o  & ( (!\A[4]~input_o  & (\A[3]~input_o  & (\A[2]~input_o  & \A[1]~input_o ))) ) )

	.dataa(!\A[4]~input_o ),
	.datab(!\A[3]~input_o ),
	.datac(!\A[2]~input_o ),
	.datad(!\A[1]~input_o ),
	.datae(!\A[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst13~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst13~0 .extended_lut = "off";
defparam \inst13~0 .lut_mask = 64'h0000000200000002;
defparam \inst13~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst9|inst6 (
// Equation(s):
// \inst9|inst6~combout  = ( \A[0]~input_o  & ( !\A[4]~input_o  $ (((!\A[3]~input_o ) # ((!\A[2]~input_o ) # (!\A[1]~input_o )))) ) ) # ( !\A[0]~input_o  & ( \A[4]~input_o  ) )

	.dataa(!\A[4]~input_o ),
	.datab(!\A[3]~input_o ),
	.datac(!\A[2]~input_o ),
	.datad(!\A[1]~input_o ),
	.datae(!\A[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst9|inst6~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst9|inst6 .extended_lut = "off";
defparam \inst9|inst6 .lut_mask = 64'h5555555655555556;
defparam \inst9|inst6 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst7|inst6 (
// Equation(s):
// \inst7|inst6~combout  = !\A[3]~input_o  $ (((!\A[2]~input_o ) # ((!\A[1]~input_o ) # (!\A[0]~input_o ))))

	.dataa(!\A[3]~input_o ),
	.datab(!\A[2]~input_o ),
	.datac(!\A[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst7|inst6~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst7|inst6 .extended_lut = "off";
defparam \inst7|inst6 .lut_mask = 64'h5556555655565556;
defparam \inst7|inst6 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst6|inst6 (
// Equation(s):
// \inst6|inst6~combout  = !\A[2]~input_o  $ (((!\A[1]~input_o ) # (!\A[0]~input_o )))

	.dataa(!\A[2]~input_o ),
	.datab(!\A[1]~input_o ),
	.datac(!\A[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst6|inst6~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst6|inst6 .extended_lut = "off";
defparam \inst6|inst6 .lut_mask = 64'h5656565656565656;
defparam \inst6|inst6 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst5|inst6 (
// Equation(s):
// \inst5|inst6~combout  = !\A[1]~input_o  $ (!\A[0]~input_o )

	.dataa(!\A[1]~input_o ),
	.datab(!\A[0]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5|inst6~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5|inst6 .extended_lut = "off";
defparam \inst5|inst6 .lut_mask = 64'h6666666666666666;
defparam \inst5|inst6 .shared_arith = "off";
// synopsys translate_on

assign OVF = \OVF~output_o ;

assign S[4] = \S[4]~output_o ;

assign S[3] = \S[3]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[0] = \S[0]~output_o ;

endmodule
